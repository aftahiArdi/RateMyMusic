import type { Booleanish } from '../../types';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    tag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    title: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    text: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    bgVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    textVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseTextColorVariant | null>;
        default: null;
    };
    overlay: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    subtitle: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    subtitleTag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    subtitleTextVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseTextColorVariant | null>;
        default: undefined;
    };
    titleTag: {
        type: import("vue").PropType<string>;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    tag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    title: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    text: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    bgVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    textVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseTextColorVariant | null>;
        default: null;
    };
    overlay: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    subtitle: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    subtitleTag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    subtitleTextVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseTextColorVariant | null>;
        default: undefined;
    };
    titleTag: {
        type: import("vue").PropType<string>;
        default: string;
    };
}>>, {
    tag: string;
    title: string;
    text: string;
    variant: keyof import("../../types").BaseColorVariant | null;
    bgVariant: keyof import("../../types").BaseColorVariant | null;
    textVariant: keyof import("../../types").BaseTextColorVariant | null;
    overlay: Booleanish;
    subtitle: string;
    subtitleTag: string;
    subtitleTextVariant: keyof import("../../types").BaseTextColorVariant | null;
    titleTag: string;
}, {}>, {
    default?: ((props: Record<string, never>) => any) | undefined;
    title?: ((props: Record<string, never>) => any) | undefined;
    subtitle?: ((props: Record<string, never>) => any) | undefined;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
