import type { Booleanish, SpinnerType } from '../../types';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    fixed: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | "white" | "transparent" | null>;
        default: string;
    };
    opacity: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    blur: {
        type: import("vue").PropType<string | null>;
        default: string;
    };
    show: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    noFade: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    zIndex: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    rounded: {
        type: import("vue").PropType<string | boolean>;
        default: boolean;
    };
    noWrap: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    bgColor: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    noCenter: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    overlayTag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    spinnerSmall: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    spinnerType: {
        type: import("vue").PropType<SpinnerType>;
        default: string;
    };
    spinnerVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: undefined;
    };
    noSpinner: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    wrapTag: {
        type: import("vue").PropType<string>;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    click: (value: MouseEvent) => void;
    hidden: () => void;
    shown: () => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    fixed: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | "white" | "transparent" | null>;
        default: string;
    };
    opacity: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    blur: {
        type: import("vue").PropType<string | null>;
        default: string;
    };
    show: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    noFade: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    zIndex: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    rounded: {
        type: import("vue").PropType<string | boolean>;
        default: boolean;
    };
    noWrap: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    bgColor: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    noCenter: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    overlayTag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    spinnerSmall: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    spinnerType: {
        type: import("vue").PropType<SpinnerType>;
        default: string;
    };
    spinnerVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: undefined;
    };
    noSpinner: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    wrapTag: {
        type: import("vue").PropType<string>;
        default: string;
    };
}>> & {
    onShown?: (() => any) | undefined;
    onHidden?: (() => any) | undefined;
    onClick?: ((value: MouseEvent) => any) | undefined;
}, {
    fixed: Booleanish;
    variant: keyof import("../../types").BaseColorVariant | "white" | "transparent" | null;
    opacity: string | number;
    blur: string | null;
    show: Booleanish;
    noFade: Booleanish;
    zIndex: string | number;
    rounded: string | boolean;
    noWrap: Booleanish;
    bgColor: string;
    noCenter: Booleanish;
    overlayTag: string;
    spinnerSmall: Booleanish;
    spinnerType: SpinnerType;
    spinnerVariant: keyof import("../../types").BaseColorVariant | null;
    noSpinner: Booleanish;
    wrapTag: string;
}, {}>, {
    default?: ((props: Record<string, never>) => any) | undefined;
    overlay?: ((props: {
        type: SpinnerType;
        variant: keyof import("../../types").BaseColorVariant | null | undefined;
        small: boolean;
    }) => any) | undefined;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
