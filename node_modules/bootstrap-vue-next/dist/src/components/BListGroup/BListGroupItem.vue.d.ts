import type { Booleanish } from '../../types';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    tag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    target: {
        type: import("vue").PropType<import("../../types").LinkTarget>;
        default: string;
    };
    to: {
        type: import("vue").PropType<import("vue-router").RouteLocationRaw>;
        default: undefined;
    };
    button: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    replace: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    href: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    rel: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    disabled: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    active: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    activeClass: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    append: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    routerComponentName: {
        type: import("vue").PropType<string>;
        default: string;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    opacity: {
        type: import("vue").PropType<10 | "10" | 25 | 50 | 75 | 100 | "25" | "50" | "75" | "100">;
        default: undefined;
    };
    opacityHover: {
        type: import("vue").PropType<10 | "10" | 25 | 50 | 75 | 100 | "25" | "50" | "75" | "100">;
        default: undefined;
    };
    underlineVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    underlineOffset: {
        type: import("vue").PropType<1 | 2 | 3 | "1" | "2" | "3">;
        default: undefined;
    };
    underlineOffsetHover: {
        type: import("vue").PropType<1 | 2 | 3 | "1" | "2" | "3">;
        default: undefined;
    };
    underlineOpacity: {
        type: import("vue").PropType<0 | 10 | "0" | "10" | 25 | 50 | 75 | 100 | "25" | "50" | "75" | "100">;
        default: undefined;
    };
    underlineOpacityHover: {
        type: import("vue").PropType<0 | 10 | "0" | "10" | 25 | 50 | 75 | 100 | "25" | "50" | "75" | "100">;
        default: undefined;
    };
    icon: {
        type: import("vue").PropType<Booleanish>;
    };
    action: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    tag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    target: {
        type: import("vue").PropType<import("../../types").LinkTarget>;
        default: string;
    };
    to: {
        type: import("vue").PropType<import("vue-router").RouteLocationRaw>;
        default: undefined;
    };
    button: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    replace: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    href: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    rel: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    disabled: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    active: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    activeClass: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    append: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    routerComponentName: {
        type: import("vue").PropType<string>;
        default: string;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    opacity: {
        type: import("vue").PropType<10 | "10" | 25 | 50 | 75 | 100 | "25" | "50" | "75" | "100">;
        default: undefined;
    };
    opacityHover: {
        type: import("vue").PropType<10 | "10" | 25 | 50 | 75 | 100 | "25" | "50" | "75" | "100">;
        default: undefined;
    };
    underlineVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    underlineOffset: {
        type: import("vue").PropType<1 | 2 | 3 | "1" | "2" | "3">;
        default: undefined;
    };
    underlineOffsetHover: {
        type: import("vue").PropType<1 | 2 | 3 | "1" | "2" | "3">;
        default: undefined;
    };
    underlineOpacity: {
        type: import("vue").PropType<0 | 10 | "0" | "10" | 25 | 50 | 75 | 100 | "25" | "50" | "75" | "100">;
        default: undefined;
    };
    underlineOpacityHover: {
        type: import("vue").PropType<0 | 10 | "0" | "10" | 25 | 50 | 75 | 100 | "25" | "50" | "75" | "100">;
        default: undefined;
    };
    icon: {
        type: import("vue").PropType<Booleanish>;
    };
    action: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
}>>, {
    tag: string;
    target: import("../../types").LinkTarget;
    to: import("vue-router").RouteLocationRaw;
    button: Booleanish;
    replace: Booleanish;
    href: string;
    rel: string;
    disabled: Booleanish;
    active: Booleanish;
    activeClass: string;
    append: Booleanish;
    routerComponentName: string;
    variant: keyof import("../../types").BaseColorVariant | null;
    opacity: 10 | "10" | 25 | 50 | 75 | 100 | "25" | "50" | "75" | "100";
    opacityHover: 10 | "10" | 25 | 50 | 75 | 100 | "25" | "50" | "75" | "100";
    underlineVariant: keyof import("../../types").BaseColorVariant | null;
    underlineOffset: 1 | 2 | 3 | "1" | "2" | "3";
    underlineOffsetHover: 1 | 2 | 3 | "1" | "2" | "3";
    underlineOpacity: 0 | 10 | "0" | "10" | 25 | 50 | 75 | 100 | "25" | "50" | "75" | "100";
    underlineOpacityHover: 0 | 10 | "0" | "10" | 25 | 50 | 75 | 100 | "25" | "50" | "75" | "100";
    action: Booleanish;
}, {}>, {
    default?: ((props: Record<string, never>) => any) | undefined;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
