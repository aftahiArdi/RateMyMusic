import type { Booleanish, Breakpoint } from '../types';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    gutterX: {
        type: import("vue").PropType<string | number>;
        default: undefined;
    };
    gutterY: {
        type: import("vue").PropType<string | number>;
        default: undefined;
    };
    fluid: {
        type: import("vue").PropType<Booleanish | Breakpoint>;
        default: boolean;
    };
    tag: {
        type: import("vue").PropType<string>;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    gutterX: {
        type: import("vue").PropType<string | number>;
        default: undefined;
    };
    gutterY: {
        type: import("vue").PropType<string | number>;
        default: undefined;
    };
    fluid: {
        type: import("vue").PropType<Booleanish | Breakpoint>;
        default: boolean;
    };
    tag: {
        type: import("vue").PropType<string>;
        default: string;
    };
}>>, {
    gutterX: string | number;
    gutterY: string | number;
    fluid: Booleanish | Breakpoint;
    tag: string;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
