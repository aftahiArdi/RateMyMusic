declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    offset: {
        type: import("vue").PropType<string | number | null>;
        default: undefined;
    };
    target: {
        type: import("vue").PropType<import("vue").MaybeRef<string | HTMLElement | HTMLSpanElement | import("vue").ComponentPublicInstance<HTMLElement> | null>>;
        default: undefined;
    };
    html: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    title: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    id: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    variant: {
        type: import("vue").PropType<keyof import("../types").BaseColorVariant | null>;
        default: undefined;
    };
    modelValue: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    hide: {
        type: import("vue").PropType<import("../types").Booleanish>;
    };
    delay: {
        type: import("vue").PropType<number | {
            show: number;
            hide: number;
        }>;
        default: undefined;
    };
    noFade: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    container: {
        type: import("vue").PropType<string | HTMLElement | import("vue").ComponentPublicInstance<HTMLElement>>;
        default: undefined;
    };
    reference: {
        type: import("vue").PropType<import("vue").MaybeRef<string | HTMLElement | HTMLSpanElement | import("vue").ComponentPublicInstance<HTMLElement> | null>>;
        default: undefined;
    };
    content: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    click: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    manual: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    customClass: {
        type: import("vue").PropType<any>;
        default: undefined;
    };
    placement: {
        type: import("vue").PropType<import("../types").BPopoverPlacement>;
        default: undefined;
    };
    strategy: {
        type: import("vue").PropType<import('../../node_modules/@floating-ui/core').Strategy>;
        default: undefined;
    };
    floatingMiddleware: {
        type: import("vue").PropType<{
            name: string;
            options?: any;
            fn: (state: {
                placement: import('../../node_modules/@floating-ui/core').Placement;
                strategy: import('../../node_modules/@floating-ui/core').Strategy;
                x: number;
                y: number;
                initialPlacement: import('../../node_modules/@floating-ui/core').Placement;
                middlewareData: import('../../node_modules/@floating-ui/core').MiddlewareData;
                rects: import('../../node_modules/@floating-ui/core').ElementRects;
                platform: import('../../node_modules/@floating-ui/core').Platform;
                elements: import("@floating-ui/vue").Elements;
            }) => import('../../node_modules/@floating-ui/core').MiddlewareReturn | Promise<import('../../node_modules/@floating-ui/core').MiddlewareReturn>;
        }[]>;
        default: undefined;
    };
    noFlip: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    noShift: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    noAutoClose: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    realtime: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    inline: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    noninteractive: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: boolean;
    };
}, {
    hide: ((import("../types").Booleanish | undefined) & ((e: Event) => void)) | undefined;
    show: (() => void) | undefined;
    toggle: ((e: Event) => void) | undefined;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    offset: {
        type: import("vue").PropType<string | number | null>;
        default: undefined;
    };
    target: {
        type: import("vue").PropType<import("vue").MaybeRef<string | HTMLElement | HTMLSpanElement | import("vue").ComponentPublicInstance<HTMLElement> | null>>;
        default: undefined;
    };
    html: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    title: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    id: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    variant: {
        type: import("vue").PropType<keyof import("../types").BaseColorVariant | null>;
        default: undefined;
    };
    modelValue: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    hide: {
        type: import("vue").PropType<import("../types").Booleanish>;
    };
    delay: {
        type: import("vue").PropType<number | {
            show: number;
            hide: number;
        }>;
        default: undefined;
    };
    noFade: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    container: {
        type: import("vue").PropType<string | HTMLElement | import("vue").ComponentPublicInstance<HTMLElement>>;
        default: undefined;
    };
    reference: {
        type: import("vue").PropType<import("vue").MaybeRef<string | HTMLElement | HTMLSpanElement | import("vue").ComponentPublicInstance<HTMLElement> | null>>;
        default: undefined;
    };
    content: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    click: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    manual: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    customClass: {
        type: import("vue").PropType<any>;
        default: undefined;
    };
    placement: {
        type: import("vue").PropType<import("../types").BPopoverPlacement>;
        default: undefined;
    };
    strategy: {
        type: import("vue").PropType<import('../../node_modules/@floating-ui/core').Strategy>;
        default: undefined;
    };
    floatingMiddleware: {
        type: import("vue").PropType<{
            name: string;
            options?: any;
            fn: (state: {
                placement: import('../../node_modules/@floating-ui/core').Placement;
                strategy: import('../../node_modules/@floating-ui/core').Strategy;
                x: number;
                y: number;
                initialPlacement: import('../../node_modules/@floating-ui/core').Placement;
                middlewareData: import('../../node_modules/@floating-ui/core').MiddlewareData;
                rects: import('../../node_modules/@floating-ui/core').ElementRects;
                platform: import('../../node_modules/@floating-ui/core').Platform;
                elements: import("@floating-ui/vue").Elements;
            }) => import('../../node_modules/@floating-ui/core').MiddlewareReturn | Promise<import('../../node_modules/@floating-ui/core').MiddlewareReturn>;
        }[]>;
        default: undefined;
    };
    noFlip: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    noShift: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    noAutoClose: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    realtime: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    inline: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: undefined;
    };
    noninteractive: {
        type: import("vue").PropType<import("../types").Booleanish>;
        default: boolean;
    };
}>>, {
    offset: string | number | null;
    target: import("vue").MaybeRef<string | HTMLElement | HTMLSpanElement | import("vue").ComponentPublicInstance<HTMLElement> | null>;
    html: import("../types").Booleanish;
    title: string;
    id: string;
    variant: keyof import("../types").BaseColorVariant | null;
    modelValue: import("../types").Booleanish;
    delay: number | {
        show: number;
        hide: number;
    };
    noFade: import("../types").Booleanish;
    container: string | HTMLElement | import("vue").ComponentPublicInstance<HTMLElement>;
    reference: import("vue").MaybeRef<string | HTMLElement | HTMLSpanElement | import("vue").ComponentPublicInstance<HTMLElement> | null>;
    content: string;
    click: import("../types").Booleanish;
    manual: import("../types").Booleanish;
    customClass: any;
    placement: import("../types").BPopoverPlacement;
    strategy: import('../../node_modules/@floating-ui/core').Strategy;
    floatingMiddleware: {
        name: string;
        options?: any;
        fn: (state: {
            placement: import('../../node_modules/@floating-ui/core').Placement;
            strategy: import('../../node_modules/@floating-ui/core').Strategy;
            x: number;
            y: number;
            initialPlacement: import('../../node_modules/@floating-ui/core').Placement;
            middlewareData: import('../../node_modules/@floating-ui/core').MiddlewareData;
            rects: import('../../node_modules/@floating-ui/core').ElementRects;
            platform: import('../../node_modules/@floating-ui/core').Platform;
            elements: import("@floating-ui/vue").Elements;
        }) => import('../../node_modules/@floating-ui/core').MiddlewareReturn | Promise<import('../../node_modules/@floating-ui/core').MiddlewareReturn>;
    }[];
    noFlip: import("../types").Booleanish;
    noShift: import("../types").Booleanish;
    noAutoClose: import("../types").Booleanish;
    realtime: import("../types").Booleanish;
    inline: import("../types").Booleanish;
    noninteractive: import("../types").Booleanish;
}, {}>, Partial<Record<NonNullable<string | number>, (_: any) => any>>>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
