import type { RendererElement } from 'vue';
import type { Booleanish } from '../../types';
declare const _default: import("vue").DefineComponent<{
    teleportDisabled: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    teleportTo: {
        type: import("vue").PropType<string | RendererElement | null>;
        default: string;
    };
}, {
    hide: (self: symbol) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    teleportDisabled: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    teleportTo: {
        type: import("vue").PropType<string | RendererElement | null>;
        default: string;
    };
}>>, {
    teleportDisabled: Booleanish;
    teleportTo: string | RendererElement | null;
}, {}>;
export default _default;
